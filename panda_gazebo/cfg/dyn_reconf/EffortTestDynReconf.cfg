# NOTE: Config for the dynamic_reconfig_srv in the panda_effort_controller_test.py script
PACKAGE = "panda_training"

# initialize ros and import the parameter generator
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

# Generate parameters effort control parameters
gen.add("joint1_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint2_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint3_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint4_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint5_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint6_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)
gen.add("joint7_effort",    double_t,    0, "Joint effort control command", 0,  -100, 100)

# Generate the necessary files and exit the program
exit(gen.generate(PACKAGE, "panda_training", "JointEffort"))